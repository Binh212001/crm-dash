services:
  db:
    image: debezium/postgres:16
    container_name: crm-database
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      TZ: "UTC"
    ports:
      - "${DATABASE_PORT}:5432"
    mem_limit: 4g
    cpus: "2.0"
    networks:
      - crm-backend-network
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d crm"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
      - "8003:8001"
    env_file:
      - .env
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
    environment:
      REDIS_ARGS: "--requirepass ${REDIS_PASSWORD} --maxmemory 2g --maxmemory-policy noeviction"
    mem_limit: 2g # Limit memory usage to 2GB
    networks:
      - crm-backend-network

  # elasticsearch:
  #   image: elasticsearch_with_analysis_vietnamese
  #   container_name: elasticsearch
  #   restart: always
  #   env_file:
  #     - .env
  #   build:
  #     context: .
  #     dockerfile: elastic-search.Dockerfile
  #     args:
  #       ES_VERSION: ${ES_VERSION}

  #   volumes:
  #     - es_data:/usr/share/elasticsearch/data
  #   ports:
  #     - ${ES_PORT}:9200
  #   environment:
  #     - node.name=es-master
  #     - cluster.name=${ES_CLUSTER_NAME}
  #     - discovery.type=single-node
  #     - ELASTIC_PASSWORD=${ES_PASSWORD}
  #     - bootstrap.memory_lock=true
  #   mem_limit: 2g # Limit memory usage to 2GB
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   networks:
  #     - crm-backend-network

  # pgsync:
  #   build:
  #     context: .
  #     dockerfile: pgsync.Dockerfile
  #     args:
  #       WORKDIR: /pgsync
  #   command: ../entrypoint/runserver.sh
  #   container_name: pgsync
  #   restart: always
  #   env_file:
  #     - .env
  #   environment:
  #     - PG_USER=${DATABASE_USERNAME_ROOT}
  #     - PG_HOST=db
  #     - PG_PORT=5432
  #     - PG_PASSWORD=${DATABASE_PASSWORD_ROOT}
  #     - LOG_LEVEL=INFO
  #     - ELASTICSEARCH_PORT=9200
  #     - ELASTICSEARCH_SCHEME=http
  #     - ELASTICSEARCH_HOST=elasticsearch
  #     - ELASTICSEARCH_USER=elastic
  #     - ELASTICSEARCH_PASSWORD=${ES_PASSWORD}
  #     - REDIS_HOST=redissass
  #     - REDIS_PORT=6379
  #     - REDIS_AUTH=${REDIS_PASSWORD}
  #   volumes:
  #     - ./data/pgsync/workdir:/pgsync
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - vmaster-backend_vmaster-backend-network
  #     - crm-backend-network
  #   mem_limit: 512m

volumes:
  postgres_data:
  # pgadmin_data:
  redis_data:
  # es_data:

networks:
  crm-backend-network:
