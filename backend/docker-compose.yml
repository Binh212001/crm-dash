services:
  db:
    image: debezium/postgres:16
    container_name: crm-database
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      TZ: "UTC"
    ports:
      - "${DATABASE_PORT}:5432"
    mem_limit: 4g
    cpus: "2.0"
    networks:
      - crm-backend-network
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d crm"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
      - "8003:8001"
    env_file:
      - .env
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
    environment:
      REDIS_ARGS: "--requirepass ${REDIS_PASSWORD} --maxmemory 2g --maxmemory-policy noeviction"
    mem_limit: 2g # Limit memory usage to 2GB
    networks:
      - crm-backend-network
      
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # Cổng AMQP
      - "15672:15672"    # Giao diện quản trị web
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - crm-backend-network

volumes:
  postgres_data:
  redis_data:

networks:
  crm-backend-network:
